{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "API for the Tasks App. Bootstrapped with Express and MongoDB.",
        "description": "A minimal and easy to follow example of what you need to create a CRUD API in Node.js using Typescript",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:5555/api",
    "basePath": "",
    "tags": [
        {
            "name": "Tasks",
            "description": "API for tasks app!"
        }
    ],
    "consumes": [
      "application/json"  
    ],
    "produces":[
        "application/json"
    ],
    "definitions": {
        "Users": {
            "properties": {
                "email":{
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    },
    "paths": {
        "/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Register a new User",
                "parameters": [
                  {
                    "in": "body",
                    "name": "Users",
                    "description": "Register your User with e-mail and password!",
                    "schema": {
                        "$ref": "#/definitions/Users"
                    }
                  }
                ],
                "produces":[
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    },
                    "400": {
                        "description": "Failed. User already registered!"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Sign In with your User",
                "parameters": [
                  {
                    "in": "body",
                    "name": "Users",
                    "description": "Sign In your User with e-mail and password!",
                    "schema": {
                        "$ref": "#/definitions/Users"
                    }
                  }
                ],
                "produces":[
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    },
                    "400": {
                        "description": "Failed. The received user is not registered!"
                    }
                }
            }
        }
    }
}